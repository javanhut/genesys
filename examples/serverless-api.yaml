# Serverless API with database
# Example template for serverless API deployment
# NOTE: Provider implementation removed - this is a template only

resources:
  database:
    - name: api-db
      engine: postgres
      version: "15"
      size: small
      storage: 50
      multi_az: false
      backup:
        retention_days: 7
        window: "03:00-04:00"
      tags:
        Environment: production
        Service: api

  serverless:
    - name: user-service
      runtime: python3.11
      handler: app.handler
      memory: 512
      timeout: 30
      environment:
        DB_HOST: ${database.api-db.endpoint}
        DB_NAME: userdb
      triggers:
        - type: http
          path: /users/*
          methods: [GET, POST, PUT, DELETE]
      tags:
        Environment: production
        Service: api

    - name: auth-service
      runtime: python3.11
      handler: auth.handler
      memory: 256
      timeout: 15
      environment:
        JWT_SECRET: ${secrets.jwt-key}
      triggers:
        - type: http
          path: /auth/*
          methods: [POST]
      tags:
        Environment: production
        Service: api

  storage:
    - name: api-logs
      type: bucket
      versioning: false
      encryption: true
      lifecycle:
        delete_after_days: 30
      tags:
        Environment: production
        Service: api

policies:
  require_tags: ["Environment", "Service"]
  max_cost_per_month: 200