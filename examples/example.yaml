# Example Genesys configuration
provider: aws
region: us-east-1

# High-level outcomes (simple approach)
outcomes:
  static-site:
    domain: my-website.com
    enable_cdn: true
    enable_https: true
  
  api:
    name: user-api
    runtime: python3.11
    memory: 512
    timeout: 30

# Detailed resources (advanced approach)
resources:
  compute:
    - name: web-server
      type: medium
      image: ubuntu-lts
      count: 2
      tags:
        Environment: production
        Team: platform

  storage:
    - name: app-data
      type: bucket
      versioning: true
      encryption: true
      public_access: false
      tags:
        Purpose: application-data

  database:
    - name: user-db
      engine: postgres
      version: "14"
      size: small
      storage: 100
      multi_az: false
      backup:
        retention_days: 7
        window: "03:00-04:00"

  serverless:
    - name: data-processor
      runtime: python3.11
      handler: main.process
      memory: 1024
      timeout: 300
      environment:
        DB_HOST: ${database.user-db.endpoint}
        BUCKET_NAME: ${storage.app-data.name}
      triggers:
        - type: schedule
          schedule: "rate(1 hour)"

# State configuration
state:
  backend: s3
  encrypt: true

# Policy guardrails
policies:
  no_public_buckets: true
  require_encryption: true
  require_tags: [Environment, Team]
  max_cost_per_month: 500